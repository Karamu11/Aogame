import os,sys,aiohttp,asyncio,datetime,time,requests

# SETUP TOOL
xnhac = "\033[1;36m"
do = "\033[1;31m"
luc = "\033[1;32m"
vang = "\033[1;33m"
xduong = "\033[1;34m"
hong = "\033[1;35m"
trang = "\033[1;37m"
whiteb = "\033[1;37m"
red = "\033[0;31m"
redb = "\033[1;31m"
end = '\033[0m'
put = f"{trang}[{do}+{trang}] => {luc}"
out = f"{trang}[{do}-{trang}] => {luc}"

def banner():
    os.system('cls' if os.name == 'nt' else 'clear')
    ban = f'''{do}
 __  ___      ___       __  .___________.  ______   
|  |/  /     /   \\     |  | |           | /  __  \\  
|  '  /     /  ^  \\    |  | `---|  |----`|  |  |  | 
|    <     /  /_\\  \\   |  |     |  |     |  |  |  | 
|  .  \\   /  _____  \\  |  |     |  |     |  `--'  | 
|__|\\__\\ /__/     \\__\\ |__|     |__|      \\______/
{luc}
---------------------------------------------------------------------------
{trang}[{do}</>{trang}] {xduong}TOOL SHARE ẢO PRO5 MAX SPEED{luc}
---------------------------------------------------------------------------
'''
    for i in ban:
        sys.stdout.write(i)
        sys.stdout.flush()
        time.sleep(0.000012)

success = []
list_token = []

# API PHỤ
async def getid(session, link):
    async with session.post('https://id.traodoisub.com/api.php', data={"link": link}) as response:
        rq = await response.json()
        if 'success' in rq:
            id = rq["id"]
            print(f"{out}Id bài viết: {trang}{id}")
            print(f"{luc}---------------------------------------------------------------------------")
            return id
        else:
            exit(f"{do}Link post sai!!! Vui lòng nhập lại")

async def get_token(session, token, cookie):
    async with session.get(f'https://graph.facebook.com/me/accounts?access_token={token}', headers={'cookie': cookie}) as r:
        rq = await r.json()
        if 'data' in rq:
            for token in rq["data"]:
                list_token.append(token["access_token"])
            return token
        else:
            exit(f"{do}Cookie Sai! Vui lòng nhập lại")

# API SHARE
async def shareao(session, tk, ck, post):
    while True:
        now = datetime.datetime.now()
        current_time = now.strftime("%H:%M:%S")
        async with session.get(f'https://graph.facebook.com/me/feed?method=POST&link=https://m.facebook.com/{post}&published=0&access_token={tk}', headers={'cookie': ck}) as response:
            json = await response.json()
            if 'id' in json:
                print(luc,f"{do}[{vang}{current_time}{do}]{luc}",json['id'],": THÀNH CÔNG : SỐ SHARE :",len(success))
                success.append(json['id'])
            else:
                print(do,f"{do}[{vang}{current_time}{do}]{vang}","THẤT BẠI : SỐ SHARE :",len(success))
                break

async def main(link, token, cookie):
    banner()
    async with aiohttp.ClientSession() as session:
        post = await getid(session, link)
        await get_token(session, token, cookie)
        print(f"{out}TỔNG SỐ PAGE: {trang}{len(list_token)}")
        print(f"{luc}---------------------------------------------------------------------------")
        await asyncio.gather(*[shareao(session, tk, cookie, post) for tk in list_token])
        await session.close()
        print(f"{luc}---------------------------------------------------------------------------")
        print(out+"TOOL ĐÃ CHẠY XONG BẠN ĐÃ CHẠY ĐƯỢC SỐ SHARE LÀ:",len(success))

# RUN TOOL
if __name__ == "__main__":
    banner()
    link = input(f"{put}Nhập link bài viết: {vang}")
    cookie = input(f"{put}Nhập cookie acc: {vang}")
    token = "EAAG"+requests.get('https://business.facebook.com/business_locations/', headers={'cookie': cookie}).text.split("EAAG")[1].split('"')[0]
    asyncio.run(main(link, token, cookie))
